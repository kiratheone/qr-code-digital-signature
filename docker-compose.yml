version: '3.8'

services:
  qds-frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8065:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://qds-backend:${PORT:-8112}
    depends_on:
      - qds-backend
    networks:
      - app-network

  qds-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${PORT:-8112}:${PORT:-8112}"
    environment:
      - PORT=${PORT:-8112}
      - DB_HOST=qds-postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL_MODE=${DB_SSL_MODE:-disable}
      - JWT_SECRET=${JWT_SECRET}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - PUBLIC_KEY=${PUBLIC_KEY}
    depends_on:
      qds-postgres:
        condition: service_healthy
    networks:
      - app-network

  qds-postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5434}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge